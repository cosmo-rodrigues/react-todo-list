{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["TodoForm","props","useState","input","setInput","inputRef","useRef","useEffect","current","focus","className","onSubmit","event","preventDefault","id","Math","floor","random","text","type","placeholder","value","name","onChange","target","ref","Todo","todos","completeTodo","removeTodo","updateTodo","edit","setEdit","map","todo","index","isComplete","onClick","TodoList","setTodos","test","newTodo","updateTodos","isCompleted","removeArr","filter","todoId","newValue","preveusTodos","item","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNA4CeA,MA1Cf,SAAkBC,GAAQ,IAAD,EAEKC,mBAAS,IAFd,mBAEfC,EAFe,KAERC,EAFQ,KAoBjBC,EAAWC,iBAAO,MAMxB,OAJAC,qBAAU,WACRF,EAASG,QAAQC,WAIjB,uBAAOC,UAAU,YAAYC,SAlBV,SAAAC,GACnBA,EAAMC,iBAENZ,EAAMU,SAAS,CACbG,GAAIC,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBC,KAAMf,IAGRC,EAAS,KAUT,UACE,uBACEe,KAAK,OACLC,YAAY,gBACZC,MAAOlB,EACPmB,KAAK,OACLZ,UAAU,aACVa,SA9Be,SAAC,GAAc,IAC1BF,EADyB,EAAZG,OACbH,MACRjB,EAASiB,IA6BLI,IAAKpB,IAEP,wBAAQK,UAAU,cAAlB,0B,eCSSgB,MA1Cf,YAA8D,IAA/CC,EAA8C,EAA9CA,MAAOC,EAAuC,EAAvCA,aAAcC,EAAyB,EAAzBA,WAAYC,EAAa,EAAbA,WAAa,EACjC5B,mBAAS,CACjCY,GAAI,KACJO,MAAO,KAHkD,mBACnDU,EADmD,KAC7CC,EAD6C,KAc3D,OAAID,EAAKjB,GACA,cAAC,EAAD,CAAUiB,KAAMA,EAAMpB,SATV,SAAAU,GACnBS,EAAWC,EAAKjB,GAAIO,GACpBW,EAAQ,CACNlB,GAAI,KACJO,MAAO,QAQJM,EAAMM,KAAI,SAACC,EAAMC,GAAP,OACf,sBACEzB,UAAWwB,EAAKE,WACd,oBACA,WAHJ,UAMA,qBAAmBC,QAAS,kBAAMT,EAAaM,EAAKpB,KAApD,SACGoB,EAAKhB,MADEgB,EAAKpB,IAGf,sBAAKJ,UAAU,QAAf,UACE,cAAC,IAAD,CACE2B,QAAS,kBAAMR,EAAWK,EAAKpB,KAC/BJ,UAAU,gBAEZ,cAAC,IAAD,CACE2B,QAAS,kBAAML,EAAQ,CAAElB,GAAIoB,EAAKpB,GAAIO,MAAOa,EAAKhB,QAClDR,UAAU,mBAZPyB,OC0BIG,MAnDf,WAAqB,IAAD,EACUpC,mBAAS,IADnB,mBACVyB,EADU,KACHY,EADG,KAqClB,OACE,gCACE,sDACA,cAAC,EAAD,CAAU5B,SArCE,SAAAuB,GAGd,GAAKA,EAAKhB,OAAQ,QAAQsB,KAAKN,EAAKhB,MAApC,CAGA,IAAMuB,EAAO,CAAIP,GAAJ,mBAAaP,IAC1BY,EAASE,OA+BP,cAAC,EAAD,CACEd,MAAOA,EACPC,aAhBe,SAAAd,GACnB,IAAI4B,EAAcf,EAAMM,KAAI,SAAAC,GAI1B,OAHIA,EAAKpB,KAAOA,IACdoB,EAAKS,aAAeT,EAAKS,aAEpBT,KAETK,EAASG,IAULb,WAtBa,SAAAf,GACjB,IAAM8B,EAAY,YAAIjB,GAAOkB,QAAO,SAAAX,GAAI,OAAIA,EAAKpB,KAAOA,KACxDyB,EAASK,IAqBLd,WAhCa,SAACgB,EAAQC,GACrBA,EAAS7B,OAAQ,QAAQsB,KAAKO,EAAS7B,OAG5CqB,GAAS,SAAAS,GAAY,OAAIA,EAAaf,KAAI,SAAAgB,GAAI,OAC5CA,EAAKnC,KAAOgC,EAASC,EAAWE,eCXvBC,MARf,WACE,OACE,qBAAKxC,UAAU,WAAf,SACE,cAAC,EAAD,OCFNyC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f7b1970b.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nfunction TodoForm(props) {\n\n  const [ input, setInput ] = useState('');\n\n  const handleChange = ({target}) => {\n    const { value } = target;\n    setInput(value);\n  }\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      text: input,\n    });\n    //This line below is to clean input value.\n    setInput('')\n  }\n\n  const inputRef = useRef(null);\n\n  useEffect(() => {\n    inputRef.current.focus()\n  })\n\n  return (\n    <form  className=\"todo-form\" onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        placeholder=\"Add a todo...\"\n        value={input}\n        name=\"text\"\n        className=\"todo-input\"\n        onChange={handleChange}\n        ref={inputRef}\n      />\n      <button className=\"todo-button\">Add todo</button>\n    </form>\n  )\n}\n\nexport default TodoForm\n","// https://github.com/briancodex/react-todo-app-v1\nimport React, { useState } from 'react';\nimport TodoForm from './TodoForm';\nimport { RiCloseCircleLine } from 'react-icons/ri';\nimport { TiEdit } from 'react-icons/ti';\n\nfunction Todo({todos, completeTodo, removeTodo, updateTodo}) {\n  const [ edit, setEdit ] = useState({\n    id: null,\n    value: '',\n  });\n\n  const submitUpdate = value => {\n    updateTodo(edit.id, value);\n    setEdit({\n      id: null,\n      value: '',\n    })\n  }\n\n  if (edit.id) {\n    return <TodoForm edit={edit} onSubmit={submitUpdate} />\n  }\n\n  return todos.map((todo, index) =>(\n    <div\n      className={todo.isComplete\n      ? \"todo-row complete\"\n      : \"todo-row\"}\n      key={index}\n    >\n    <div key={todo.id} onClick={() => completeTodo(todo.id)}>\n      {todo.text}\n    </div>\n    <div className=\"icons\">\n      <RiCloseCircleLine\n        onClick={() => removeTodo(todo.id)}\n        className=\"delete-icon\"\n      />\n      <TiEdit\n        onClick={() => setEdit({ id: todo.id, value: todo.text})}\n        className=\"edit-icon\"\n      />\n    </div>\n    </div>\n  ))\n}\n\nexport default Todo\n","import React, { useState } from 'react';\nimport Todo from './Todo';\nimport TodoForm from './TodoForm';\n\nfunction TodoList() {\n  const [ todos, setTodos ] = useState([]);\n\n  const addTodo = todo => {\n    // The test() method executes a search for a match between\n    // a regular expression and a specified string. Returns true or false.\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\n      return;\n    }\n    const newTodo = [todo, ...todos];\n    setTodos(newTodo);\n  }\n\n  const updateTodo = (todoId, newValue) => {\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n      return;\n    }\n    setTodos(preveusTodos => preveusTodos.map(item =>\n      item.id === todoId ? newValue : item\n      ));\n  }\n\n  const removeTodo = id => {\n    const removeArr = [...todos].filter(todo => todo.id !== id);\n    setTodos(removeArr)\n  }\n\n  const completeTodo = id => {\n    let updateTodos = todos.map(todo => {\n      if (todo.id === id) {\n        todo.isCompleted = !todo.isCompleted;\n      }\n      return todo;\n    });\n    setTodos(updateTodos);\n  }\n\n  return (\n    <div>\n      <h1>What you have to do?</h1>\n      <TodoForm onSubmit={addTodo} />\n      <Todo\n        todos={todos}\n        completeTodo={completeTodo}\n        removeTodo={removeTodo}\n        updateTodo={updateTodo}\n      />\n    </div>\n  )\n}\n\nexport default TodoList;\n","import './App.css';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n  return (\n    <div className=\"todo-app\">\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}